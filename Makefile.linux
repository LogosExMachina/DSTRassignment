# Debug
DEBUG ?= 0

ifeq ($(DEBUG), 1)
    CXXFLAGS := -Iinclude/ -std=c++17 -g3 -O0
else
    CXXFLAGS := -Iinclude/ -std=c++17 -O2
endif


# Platform specific options
ifeq ($(OS),Windows_NT)
    CXX := mingw32-g++
    LDFLAGS := -lmingw32
else
		CXX := g++
		LDFLAGS :=
endif


# Directories
OBJDIR := obj/
SRCDIR := src/
INCLUDEDIR:= include/



# Source and object files
SRCS := $(shell find $(SRCDIR) -name '*.cpp')
OBJS := $(SRCS:%=$(OBJDIR)/%.o)


# Targets
all: solution3.exe solution2.exe solution1.exe datetst.exe dynamicArrayTst.exe csvParserTst.exe linkedListMain.exe

# broken....
solution3.exe: $(addprefix $(OBJDIR), solution3.o csvParser.o dataTable.o date.o strUtils.o)
	$(CXX) $(CXXFLAGS) -g $^ -o $@ $(LDFLAGS)

solution2.exe: $(addprefix $(OBJDIR), solution2.o csvParser.o dataTable.o date.o strUtils.o)
	$(CXX) $(CXXFLAGS) -g $^ -o $@ $(LDFLAGS)

solution1.exe: $(addprefix $(OBJDIR), solution1.o csvParser.o dataTable.o date.o strUtils.o)
	$(CXX) $(CXXFLAGS) -g $^ -o $@ $(LDFLAGS)

datetst.exe: $(addprefix $(OBJDIR), datetst.o date.o)
	$(CXX) $(CXXFLAGS) -g $^ -o $@ $(LDFLAGS)

dynamicArrayTst.exe: $(addprefix $(OBJDIR), dynamicArrayTst.o csvParser.o dataTable.o strUtils.o)
	$(CXX) $(CXXFLAGS) -g $^ -o $@ $(LDFLAGS)

csvParserTst.exe: $(addprefix $(OBJDIR), csvParserTst.o csvParser.o dataTable.o strUtils.o)
	$(CXX) $(CXXFLAGS) -g $^ -o $@ $(LDFLAGS)

linkedListMain.exe: $(addprefix $(OBJDIR), csvParser.o dataTable.o strUtils.o linkedListMain.o)
	$(CXX) $(CXXFLAGS) -g $^ -o $@ $(LDFLAGS)

# Build
$(OBJDIR)%.o: $(SRCDIR)%.cpp
	mkdir -p $(dir $@)
	$(CXX) -I $(INCLUDEDIR) $(CXXFLAGS) -c $< -o $@


# Clean
clean:
	rm -rf $(OBJDIR)*.o *.exe
